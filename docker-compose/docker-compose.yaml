version: '2'

services:

  java-agent:
    container_name: java-agent
    hostname: java-agent
    image: appdynamics/java-agent:latest
    volumes:
      - java-agent:/opt/appdynamics  

  machine-agent:
    container_name: machine-agent
    hostname: machine-agent
    image: appdynamics/machine-agent-analytics:latest
    restart: always
    env_file: controller.env
    environment:
      - APPDYNAMICS_SIM_ENABLED=true
      - APPDYNAMICS_DOCKER_ENABLED=true
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock
      - /:/hostroot:ro
    expose:
      - 9090

  mongo-sessions:
    image: mongo
    container_name: mongo-sessions
    hostname: mongo-sessions
    expose: 
      - 27017

  mongo-accounts:
    image: mongo
    container_name: mongo-accounts
    hostname: mongo-accounts
    expose: 
      - 27017

  web-api:
    image: brownkw/appd_lambda_lab_nodejs_services:v1
    hostname: web-api
    container_name: web-api
    volumes:
      - './graph.json:/graph.json'
    env_file: controller.env
    environment: 
      - GRAPH_FILE=/graph.json
      - DEBUG_LEVEL=debug      
      - APPDYNAMICS_AGENT_TIER_NAME=web-api
      - APPDYNAMICS_AGENT_NODE_NAME=web-api-1
      - APPDYNAMICS_AGENT_ACCOUNT_NAME=${APPDYNAMICS_AGENT_ACCOUNT_NAME}
      - APPDYNAMICS_AGENT_ACCOUNT_ACCESS_KEY=${APPDYNAMICS_AGENT_ACCOUNT_ACCESS_KEY}
    ports:
      - '3000:3000'

  core-services:
    image: brownkw/appd_lambda_lab_java_services:v1
    hostname: core-services
    container_name: core-services
    volumes:
      - './graph.json:/graph.json'
    environment: 
      - GRAPH_FILE=/graph.json
      - JAVA_TOOL_OPTIONS=-javaagent:/opt/appdynamics/java-agent/javaagent.jar
      - APPDYNAMICS_AGENT_TIER_NAME=core-services
      - APPDYNAMICS_AGENT_NODE_NAME=core-services-1
      - APPDYNAMICS_AGENT_ACCOUNT_NAME=${APPDYNAMICS_AGENT_ACCOUNT_NAME}  
      - APPDYNAMICS_AGENT_ACCOUNT_ACCESS_KEY=${APPDYNAMICS_AGENT_ACCOUNT_ACCESS_KEY}
    ports:
      - '8080:8080'

  # load:
  #   container_name: load
  #   build: 
  #     context: ./load_container
  #   volumes:
  #     - './load.sh:/load.sh'


volumes:
  java-agent: